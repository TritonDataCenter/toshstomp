#!/bin/bash

#
# Process all files that contain "replay.out." in their name, assuming that
# they are output from toshreplay.  The suffix in the replay.out should be
# unique and will be used to generate a prefix for various processed files.
# (For example, the toshreplay output file "toshreplay.out.dmab.wce" would
# result in processed files with the prefix "dmab.wce.")  Generates a per
# replay gnuplot control file, as well as a gnuplot control file that combines
# all replays (it is assumed that each replay is of the same trace but on
# a different device or configuration).
#
cmd=toshchew

f=`echo *replay.title`

if [[ -f $f ]]; then
	replay=`cat $f`
fi

for f in *replay.out.*; do
	what=`echo $f | cut -d. -f3-`
	grep "type=R" $f | grep latency= | awk '{ print $1 " " $8 }' | \
	    tr '=' ' ' | awk '{ print $1 " " $3 }' > $what.reads
	grep "type=W" $f | grep latency= | awk '{ print $1 " " $8 }' | \
	    tr '=' ' ' | awk '{ print $1 " " $3 }' > $what.writes
	grep "outr=" $f | awk '{ print $1 " " $6  " " $7 }' | tr '=' ' ' | \
	    awk '{ print $1 " " $3  " " $5 }' > $what.q

	range=`tail -1 $what.q | awk '{ print $1 / 1000000 }'`

	for op in reads writes ; do
		ttl=`cat $what.$op | awk '{ ttl += $2 } END{ print ttl }'`
		cat $what.$op | awk '{ print $2 }' | sort -n | \
		    awk -v ttl=$ttl '{ v += $1 ; print $1 " " v / ttl }' \
		    > $what.$op.cdf
	done

	if [[ -f "$what.title" ]]; then
		title=`cat $what.title`
	else
		title=$what
	fi

	cat > $what.gpl <<EOF
set terminal qt size 1000,772
set y2tics
set key right Right

set ylabel "Latency (milliseconds)"
set y2label "I/Os outstanding"

set title "I/O operations ${replay}replayed on $title"

set logscale y

set xlabel "Time (milliseconds)"
set xrange [0:$range]
set yrange [0.001:10000]

plot \\
"$what.q" using (\$1/1000000):(\$2+\$3) \\
axes x1y2 title "Reads outstanding" with filledcurves y1=0 lt rgb "gray80", \\
"$what.q" using (\$1/1000000):3 \\
axes x1y2 title "Writes outstanding" with filledcurves y1=0 lt rgb "gray60", \\
"$what.reads" using (\$1/1000000):(\$2/1000000) \\
title "Reads" points 0.4 lt rgb "dark-blue", \\
"$what.writes" using (\$1/1000000):(\$2/1000000) \\
title "Writes" points 0.4 lt rgb "skyblue"

pause -1
EOF

	if [[ -n "$rcdf" ]]; then
		rcdf="$rcdf, "
	else
		rcdf="plot "
	fi

	rcdf="$rcdf \"$what.reads.cdf\" \
		using (\$1/1000000):2 with lines title \"$title\""

	if [[ -n "$wcdf" ]]; then
		wcdf="$wcdf, "
	else
		wcdf="plot "
	fi

	wcdf="$wcdf \"$what.writes.cdf\" \
		using (\$1/1000000):2 with lines title \"$title\""

	echo $cmd: processed $what
done

cat > all.gpl <<EOF
set terminal qt size 1000,772
set y2tics
set key bottom Right

set title "Cumulative distribution of read latency for replayed operations $replay"
set ylabel "Cumulative distribution of latency"
set xlabel "Latency (milliseconds)"

$rcdf
pause -1

set title "Cumulative distribution of write latency for replayed operations $replay"

$wcdf
pause -1

EOF
